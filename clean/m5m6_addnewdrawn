// set up a simple neutral simulation
initialize() {
  defineConstant("seed",getSeed());
	initializeMutationRate(1e-7);
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeMutationType("m2",0.5,"f",0.0);
	initializeMutationType("m3", deledom, "g", delemean, 0.1);
	m2.convertToSubstitution=F;
	m2.convertToSubstitution=F;
	initializeMutationType("m4", benedom, "e", benemean);
	m3.convertToSubstitution=F;
	c(m1,m2,m3).mutationStackPolicy="l";
	initializeGenomicElementType("g1", m1, 1.0);
	initializeMutationType("m5",sadom,"f",sasc);
	initializeMutationType("m6",sadom,"f",sasc);
	c(m5,m6).mutationStackPolicy="f";
	initializeGenomicElementType("g2",c(m2,m3,m4),c(fneu,fpos,fdel));
	if(coordfile=='none'){
		initializeGenomicElement(g1, 0, 19999);
    initializeGenomicElement(g2,20000,39999);
	  initializeGenomicElement(g1,40000,49999);
	}
	else{
	map=readFile(coordfile);
	startpos=NULL;
	endpos=NULL;
	for(line in map){
	components=strsplit(line,"\t");
	start=c(coords,asInteger(components[1]));
	end=c(coords,asInteger(components[2]));
	
	genetype=c(coords,asInteger(components[0]));
	
	if (genetype=='intron')
	initializeGenomicElement('g1',start,end);
	if (genetype=='exon')
	initializeGenomicElement('g2',start,end);
	
	}
	}
	
	initializeSex("A");
	// uniform chromosome of length 100 kb with uniform recombination
if (recmapfile=='none'){
initializeRecombinationRate(1e-8);
}
else{
	recmap=readFile(recmapfile);
	ends=NULL;
	rates=NULL;
	for(lines in recmap){
	components=strsplit(line,'\t');
	ends=c(ends,asInteger(components[0]));
	rates=c(rates,asFloat(components[1]));
	}
initializeRecombinationRate(rates,ends);
}
}
1 early() {
	sim.addSubpop("p1", N,0.5);
}
burnin late() {
m2pos=p1.genomes.positionsOfMutationsOfType(m2);
m3pos=p1.genomes.positionsOfMutationsOfType(m3);
m4pos=p1.genomes.positionsOfMutationsOfType(m4);
g2pos=c(m2pos,m3pos,m4pos);
availpos=sample(g2pos,asInteger(p1.genomes.length()*(a/2)),replace=F);
targpos=sample(availpos,1,replace=T);
for(ind in p1.individuals){		ind.genomes.addNewDrawnMutation(m5,targpos);	ind.genomes.addNewDrawnMutation(m6,targpos);
}
}
mutationEffect(m5,p1) {
	if(individual.sex=='F')
	return 1+mut.mutationType.dominanceCoeff*mut.selectionCoeff;
	else
	return 1-mut.mutationType.dominanceCoeff*mut.selectionCoeff;
}
mutationEffect(m6,p1) {
	if(individual.sex=='M')
	return 1+mut.mutationType.dominanceCoeff*mut.selectionCoeff;
	else
	return 1-mut.mutationType.dominanceCoeff*mut.selectionCoeff;
}
5000 late(){
sim.subpopulations.genomes.outputVCF(filePath="m5m6addnewdrawn"+"fneu_"+fneu+"_fpos_"+fpos+"_fdel_"+fdel+"_startpop_"+N+"_a_"+a+"_sasc_"+sasc+"_seed_"+seed+".vcf");
sim.outputFixedMutations();
inds=p1.individuals;
for(ind in inds){
indsex=paste(ind.index+"\t"+ind.sex+"\n");
writeFile("m5m6addnewdrawn"+"fneu_"+fneu+"_fpos_"+fpos+"_fdel_"+fdel+"_startpop_"+N+"_a_"+a+"_sasc_"+sasc+"_seed_"+seed+".txt",indsex,append=T);
}
sim.simulationFinished();
}
